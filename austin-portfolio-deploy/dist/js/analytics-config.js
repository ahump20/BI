/** * Blaze Intelligence Analytics Configuration * Google Analytics 4 + Custom Event Tracking */window.BLAZE_ANALYTICS = {    GA_MEASUREMENT_ID: 'G-XXXXXXXXXX',     DEBUG_MODE: false,    CUSTOM_DIMENSIONS: {        sport_type: 'dimension1',        team_name: 'dimension2',        user_type: 'dimension3',        feature_accessed: 'dimension4'    },    CONVERSION_EVENTS: {        demo_request: { value: 100, currency: 'USD' },        contact_form_submit: { value: 50, currency: 'USD' },        calculator_complete: { value: 25, currency: 'USD' },        trial_signup: { value: 200, currency: 'USD' },        api_key_request: { value: 150, currency: 'USD' },        blog_subscribe: { value: 10, currency: 'USD' },        video_view: { value: 5, currency: 'USD' },        video_complete: { value: 15, currency: 'USD' },        transcript_view: { value: 3, currency: 'USD' }    },    VIDEO_EVENTS: {        video_page_view: 'video_page_view',        video_card_click: 'video_card_click',        watch_strip_impression: 'watch_strip_impression',        transcript_click: 'transcript_click',        video_25_percent: 'video_25_percent',        video_50_percent: 'video_50_percent',        video_75_percent: 'video_75_percent',        video_complete: 'video_complete'    },    ECOMMERCE: {        currency: 'USD',        tax: 0,        shipping: 0    }};function initializeAnalytics() {    if (typeof gtag === 'undefined') {        const script = document.createElement('script');        script.async = true;        script.src = `https:        document.head.appendChild(script);        window.dataLayer = window.dataLayer || [];        window.gtag = function() { dataLayer.push(arguments); }        gtag('js', new Date());        gtag('config', window.BLAZE_ANALYTICS.GA_MEASUREMENT_ID, {            'page_title': document.title,            'page_path': window.location.pathname,            'debug_mode': window.BLAZE_ANALYTICS.DEBUG_MODE,            'custom_map': window.BLAZE_ANALYTICS.CUSTOM_DIMENSIONS,            'currency': window.BLAZE_ANALYTICS.ECOMMERCE.currency,            'send_page_view': true,            'anonymize_ip': true,            'link_attribution': true,            'allow_google_signals': true,            'allow_ad_personalization_signals': false        });        gtag('set', 'user_properties', {            'platform': 'web',            'product': 'blaze_intelligence'        });        console.log('Google Analytics initialized');    }}function trackEvent(eventName, parameters = {}) {    if (typeof gtag !== 'undefined') {        const conversionConfig = window.BLAZE_ANALYTICS.CONVERSION_EVENTS[eventName];        if (conversionConfig) {            parameters = { ...parameters, ...conversionConfig };        }        gtag('event', eventName, {            'event_category': parameters.category || 'engagement',            'event_label': parameters.label || '',            'value': parameters.value || 0,            ...parameters        });        if (window.BLAZE_ANALYTICS.DEBUG_MODE) {            console.log('Event tracked:', eventName, parameters);        }    }}function trackEcommerce(action, data) {    if (typeof gtag !== 'undefined') {        gtag('event', action, {            'currency': window.BLAZE_ANALYTICS.ECOMMERCE.currency,            ...data        });    }}function initScrollTracking() {    let maxScroll = 0;    const scrollThresholds = [25, 50, 75, 90, 100];    const trackedThresholds = new Set();    window.addEventListener('scroll', function() {        const scrollPercent = Math.round(            (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100        );        if (scrollPercent > maxScroll) {            maxScroll = scrollPercent;            scrollThresholds.forEach(threshold => {                if (scrollPercent >= threshold && !trackedThresholds.has(threshold)) {                    trackedThresholds.add(threshold);                    trackEvent('scroll_depth', {                        'percent_scrolled': threshold,                        'page_url': window.location.pathname                    });                }            });        }    });}function initTimeTracking() {    const startTime = Date.now();    const intervals = [10, 30, 60, 120, 180];     const trackedIntervals = new Set();    setInterval(() => {        const timeOnPage = Math.round((Date.now() - startTime) / 1000);        intervals.forEach(interval => {            if (timeOnPage >= interval && !trackedIntervals.has(interval)) {                trackedIntervals.add(interval);                trackEvent('time_on_page', {                    'seconds': interval,                    'page_url': window.location.pathname                });            }        });    }, 5000); }function initLinkTracking() {    document.addEventListener('click', function(e) {        const link = e.target.closest('a');        if (link && link.href && !link.href.includes(window.location.hostname)) {            trackEvent('outbound_link', {                'link_url': link.href,                'link_text': link.textContent.trim().substring(0, 100)            });        }    });}function initFormTracking() {    document.addEventListener('focusin', function(e) {        if (e.target.matches('input, textarea, select')) {            const form = e.target.closest('form');            if (form) {                trackEvent('form_interaction', {                    'form_id': form.id || 'unknown',                    'field_name': e.target.name || e.target.id || 'unknown',                    'field_type': e.target.type || 'text',                    'action': 'field_focus'                });            }        }    });    document.addEventListener('submit', function(e) {        const form = e.target;        const formId = form.id || form.className || 'unknown';        trackEvent('form_submit', {            'form_id': formId,            'form_action': form.action,            'method': form.method        });        if (formId.includes('contact') || formId.includes('demo')) {            trackEvent('contact_form_submit', {                'form_id': formId            });        }    });}function initVideoTracking() {    const videos = document.querySelectorAll('video');    videos.forEach(video => {        let hasStarted = false;        let has25 = false;        let has50 = false;        let has75 = false;        video.addEventListener('play', () => {            if (!hasStarted) {                hasStarted = true;                trackEvent('video_start', {                    'video_title': video.getAttribute('data-title') || 'Unknown',                    'video_duration': video.duration                });            }        });        video.addEventListener('timeupdate', () => {            const percent = (video.currentTime / video.duration) * 100;            if (percent >= 25 && !has25) {                has25 = true;                trackEvent('video_progress', { 'percent': 25 });            }            if (percent >= 50 && !has50) {                has50 = true;                trackEvent('video_progress', { 'percent': 50 });            }            if (percent >= 75 && !has75) {                has75 = true;                trackEvent('video_progress', { 'percent': 75 });            }        });        video.addEventListener('ended', () => {            trackEvent('video_complete', {                'video_title': video.getAttribute('data-title') || 'Unknown'            });        });    });}function initCTATracking() {    document.addEventListener('click', function(e) {        const target = e.target.closest('button, .enhanced-btn, .submit-btn, [data-cta]');        if (target) {            const ctaText = target.textContent.trim();            const ctaLocation = target.closest('section')?.id ||                                target.closest('[class*="hero"]') ? 'hero' : 'unknown';            trackEvent('cta_click', {                'cta_text': ctaText,                'cta_location': ctaLocation,                'cta_url': target.href || 'button',                'page_url': window.location.pathname            });            if (ctaText.toLowerCase().includes('demo') ||                 ctaText.toLowerCase().includes('trial')) {                trackEvent('demo_request', {                    'source': ctaLocation                });            }        }    });}document.addEventListener('DOMContentLoaded', function() {    initializeAnalytics();    setTimeout(() => {        initScrollTracking();        initTimeTracking();        initLinkTracking();        initFormTracking();        initVideoTracking();        initCTATracking();        trackEvent('page_view_enhanced', {            'page_title': document.title,            'page_location': window.location.href,            'page_path': window.location.pathname,            'page_referrer': document.referrer,            'sport_type': document.body.getAttribute('data-sport') || 'general',            'team_name': document.body.getAttribute('data-team') || 'none'        });        console.log('Blaze Intelligence Analytics tracking initialized');    }, 1000);});window.BlazeAnalytics = {    track: trackEvent,    trackEcommerce: trackEcommerce,    initialize: initializeAnalytics};